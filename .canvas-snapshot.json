{
  "quiz": {
    "id": 53433,
    "title": "Functions in JavaScript Quiz",
    "html_url": "https://learning.flatironschool.com/courses/7550/quizzes/53433",
    "mobile_url": "https://learning.flatironschool.com/courses/7550/quizzes/53433?force_user=1&persist_headless=1",
    "description": "<div id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-1-quiz-functions-in-javascript\"></div>\n<header class=\"fis-header\">\n  <a class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-1-quiz-functions-in-javascript/issues/new\" target=\"_blank\"><img id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"></a>\n</header>\n\n<p>It's time to check your knowledge! Use this quiz to create a custom study guide.\nNote any answers that were marked incorrect, so you can study the relevant\nmaterial and try this quiz again.</p>\n\n<p>If you don't know the answer to a question, please do not guess. Instead, select\n\"I don't know\". It's OK not to know everything and to admit when we're unsure.</p>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 12,
    "points_possible": 12.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_53433"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": "",
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/7550/quizzes/53433/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/7550/quizzes/53433/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/7550/quizzes/53433/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/7550/quizzes/53433/submission_versions",
    "assignment_id": 263311,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 25044,
    "show_correct_answers_last_attempt": true,
    "version_number": 8,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": "g5e7c3670c00697998dd00e673558cbf5",
    "in_paced_course": false,
    "question_types": [

    ]
  },
  "questions": [
    {
      "id": 366159,
      "quiz_id": 53433,
      "quiz_group_id": null,
      "assessment_question_id": 632019,
      "position": null,
      "question_name": "Functions: Basics",
      "question_type": "matching_question",
      "question_text": "<p>Match each of the concepts with the description or code block that best suits\nthem.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: Continued",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7550/assignments/263243?module_item_id=627475\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "id": "3126",
          "text": "Hoisting",
          "left": "Hoisting",
          "right": "In JavaScript, the ability to place a function call before the function definition is due to ___.",
          "comments": "",
          "comments_html": "",
          "match_id": 966
        },
        {
          "id": "438",
          "text": "Anonymous Function",
          "left": "Anonymous Function",
          "right": "const fn = function() {   console.log(\"Yet more razzling\"); }",
          "comments": "",
          "comments_html": "",
          "match_id": 7159
        },
        {
          "id": "8813",
          "text": "Immediately Invoked Function Expression",
          "left": "Immediately Invoked Function Expression",
          "right": "(function(baseNumber){ return baseNumber + 3; })(2)",
          "comments": "",
          "comments_html": "",
          "match_id": 7390
        },
        {
          "id": "7346",
          "text": "Function-Level Scope",
          "left": "Function-Level Scope",
          "right": "___ means that the variables belonging to a function can only be accessed from inside the function.",
          "comments": "",
          "comments_html": "",
          "match_id": 111
        },
        {
          "id": "8993",
          "text": "Closure",
          "left": "Closure",
          "right": "When a function \"encloses\" the function-level scope of its parent, we call it a ___.",
          "comments": "",
          "comments_html": "",
          "match_id": 9221
        },
        {
          "id": "6105",
          "text": "Function Declaration",
          "left": "Function Declaration",
          "right": "function razzle() {   console.log(\"You've been razzled!\"); }",
          "comments": "",
          "comments_html": "",
          "match_id": 1210
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": [
        {
          "text": "In JavaScript, the ability to place a function call before the function definition is due to ___.",
          "match_id": 966
        },
        {
          "text": "const fn = function() {   console.log(\"Yet more razzling\"); }",
          "match_id": 7159
        },
        {
          "text": "(function(baseNumber){ return baseNumber + 3; })(2)",
          "match_id": 7390
        },
        {
          "text": "___ means that the variables belonging to a function can only be accessed from inside the function.",
          "match_id": 111
        },
        {
          "text": "When a function \"encloses\" the function-level scope of its parent, we call it a ___.",
          "match_id": 9221
        },
        {
          "text": "function razzle() {   console.log(\"You've been razzled!\"); }",
          "match_id": 1210
        }
      ],
      "matching_answer_incorrect_matches": ""
    },
    {
      "id": 366160,
      "quiz_id": 53433,
      "quiz_group_id": null,
      "assessment_question_id": 632017,
      "position": null,
      "question_name": "Functions: Callbacks",
      "question_type": "short_answer_question",
      "question_text": "<p>A ____ function is a function passed into another function as an argument,\nwhich is then invoked inside the outer function. For example:</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">function</span> <span class=\"nx\">greet</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">,</span> <span class=\"nx\">fn</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nx\">fn</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">greet</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Ada Lovelace</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"dl\">\"</span><span class=\"s2\">Hello there, </span><span class=\"dl\">\"</span> <span class=\"o\">+</span> <span class=\"nx\">name</span><span class=\"p\">;</span>\n<span class=\"p\">});</span>\n</code></pre></div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "Be sure to study the source/s for this question. You'll get it next time.",
      "neutral_comments": "Source/s:Callback Functions",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7550/pages/callback-functions?module_item_id=627478\">Callback Functions</a></li></ul><p></p>",
      "answers": [
        {
          "id": "956",
          "text": "Callback",
          "comments": "",
          "comments_html": "<p>Correct!</p>",
          "weight": 100
        },
        {
          "id": "5305",
          "text": "call back",
          "comments": "",
          "comments_html": "<p>Correct!</p>",
          "weight": 100
        },
        {
          "id": "5964",
          "text": "Call Back",
          "comments": "",
          "comments_html": "<p>Correct!</p>",
          "weight": 100
        },
        {
          "id": "4372",
          "text": "Call back",
          "comments": "",
          "comments_html": "<p>Correct!</p>",
          "weight": 100
        },
        {
          "id": "9585",
          "text": "callback",
          "comments": "",
          "comments_html": "<p>Correct!</p>",
          "weight": 100
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366161,
      "quiz_id": 53433,
      "quiz_group_id": null,
      "assessment_question_id": 632022,
      "position": null,
      "question_name": "Functions: Closure",
      "question_type": "short_answer_question",
      "question_text": "<p>A ___ gives you access to an outer function’s scope from an inner function.</p>\n\n<p>For example:</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">function</span> <span class=\"nx\">outerFn</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">countCalls</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"kd\">function</span> <span class=\"nx\">innerFn</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">countCalls</span><span class=\"o\">++</span><span class=\"p\">;</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">countCalls</span><span class=\"p\">);</span>\n  <span class=\"p\">};</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">innerFn</span> <span class=\"o\">=</span> <span class=\"nx\">outerFn</span><span class=\"p\">();</span>\n<span class=\"nx\">innerFn</span><span class=\"p\">();</span>\n<span class=\"c1\">// =&gt; 1</span>\n<span class=\"nx\">innerFn</span><span class=\"p\">();</span>\n<span class=\"c1\">// =&gt; 2</span>\n</code></pre></div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "Be sure to study the source/s for this question. You'll get it next time.",
      "neutral_comments": "Source/s:Functions: Continued",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7550/assignments/263243?module_item_id=627475\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "id": "875",
          "text": "closure",
          "comments": "",
          "comments_html": "<p>Nice!</p>",
          "weight": 100
        },
        {
          "id": "2976",
          "text": "Closure",
          "comments": "",
          "comments_html": "<p>Nice!</p>",
          "weight": 100
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366162,
      "quiz_id": 53433,
      "quiz_group_id": null,
      "assessment_question_id": 632018,
      "position": null,
      "question_name": "Functions: First Class",
      "question_type": "true_false_question",
      "question_text": "<p>A function is a first class object.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: ContinuedFirst-Class Functions",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7550/assignments/263243?module_item_id=627475\">Functions: Continued</a></li><li><a href=\"/courses/7550/assignments/263241?module_item_id=627479\">First-Class Functions</a></li></ul><p></p>",
      "answers": [
        {
          "comments": "",
          "comments_html": "<p>Correct!</p>",
          "text": "True",
          "weight": 100,
          "id": 2373
        },
        {
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "text": "False",
          "weight": 0,
          "id": 685
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366163,
      "quiz_id": 53433,
      "quiz_group_id": null,
      "assessment_question_id": 632016,
      "position": null,
      "question_name": "Functions: Hoisting",
      "question_type": "true_false_question",
      "question_text": "<p>For hoisting to work, the function must be defined as a function declaration.</p>\n\n<p>For example:</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"c1\">// Hoisting</span>\n<span class=\"nx\">willItHoist</span><span class=\"p\">();</span>\n\n<span class=\"c1\">// Function declaration</span>\n<span class=\"kd\">function</span> <span class=\"nx\">willItHoist</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">You tell me!</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: Continued",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7550/assignments/263243?module_item_id=627475\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "comments": "",
          "comments_html": "<p>Correct!</p>",
          "text": "True",
          "weight": 100,
          "id": 9174
        },
        {
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "text": "False",
          "weight": 0,
          "id": 9643
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366164,
      "quiz_id": 53433,
      "quiz_group_id": null,
      "assessment_question_id": 632025,
      "position": null,
      "question_name": "Functions: Hoisting",
      "question_type": "true_false_question",
      "question_text": "<p>Function expressions are hoisted.</p>\n\n<p>For example:</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"c1\">// Hoisting</span>\n<span class=\"nx\">willItHoist</span><span class=\"p\">();</span>\n\n<span class=\"c1\">// Function expression</span>\n<span class=\"kd\">const</span> <span class=\"nx\">willItHoist</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">You tell me!</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">};</span>\n</code></pre></div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: Continued",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7550/assignments/263243?module_item_id=627475\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "text": "True",
          "weight": 0,
          "id": 6914
        },
        {
          "comments": "",
          "comments_html": "<p>Correct!</p>",
          "text": "False",
          "weight": 100,
          "id": 2833
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366165,
      "quiz_id": 53433,
      "quiz_group_id": null,
      "assessment_question_id": 632020,
      "position": null,
      "question_name": "Functions: Scope",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Given the following code:</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">function</span> <span class=\"nx\">outerFn</span><span class=\"p\">(</span><span class=\"nx\">outerParam</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">outerVar</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"kd\">function</span> <span class=\"nx\">innerFn</span><span class=\"p\">(</span><span class=\"nx\">innerParam</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">innerVar</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n    <span class=\"c1\">// etc</span>\n  <span class=\"p\">};</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>The <code>innerFn</code> function has access to...</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: Continued",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7550/assignments/263243?module_item_id=627475\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "id": 9834,
          "text": "",
          "html": "<p>All of the outer function's parameters as well as variables defined in the outer\nfunction.</p>",
          "comments": "",
          "comments_html": "",
          "weight": 100.0
        },
        {
          "id": 3280,
          "text": "",
          "html": "<p>Only the parameters passed into the inner function, and the variables declared\nwithin it.</p>",
          "comments": "",
          "comments_html": "<p>Because of JavaScript's scope rules, the inner function has access to the outer\nfunction's scope from an inner function.</p>",
          "weight": 0.0
        },
        {
          "id": 9905,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366166,
      "quiz_id": 53433,
      "quiz_group_id": null,
      "assessment_question_id": 632021,
      "position": null,
      "question_name": "Functions: Scope",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Which variables does the function <code>inner2</code> have access to?</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">part1</span> <span class=\"o\">=</span> <span class=\"dl\">\"</span><span class=\"s2\">hello</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">demoChain</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">part2</span> <span class=\"o\">=</span> <span class=\"dl\">\"</span><span class=\"s2\">hi</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"kd\">function</span> <span class=\"nx\">inner1</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">part3</span> <span class=\"o\">=</span> <span class=\"dl\">\"</span><span class=\"s2\">there</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span> <span class=\"kd\">function</span> <span class=\"nx\">inner2</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"c1\">// what variables are accessible here?</span>\n    <span class=\"p\">};</span>\n  <span class=\"p\">};</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">demoChain</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Dr. Stephen Strange</span><span class=\"dl\">\"</span><span class=\"p\">)()();</span>\n</code></pre></div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: Continued",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7550/assignments/263243?module_item_id=627475\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "id": 2058,
          "text": "",
          "html": "<p><code>part1</code>, <code>name</code>, <code>part2</code>, <code>part3</code></p>",
          "comments": "",
          "comments_html": "<p>Correct! Because of JavaScript's scope rules, the innermost function can access\nvariables from outer functions' scope as well.</p>",
          "weight": 100.0
        },
        {
          "id": 4719,
          "text": "",
          "html": "<p><code>name</code>, <code>part1</code>, <code>part3</code></p>",
          "comments": "",
          "comments_html": "<p>Because of JavaScript's scope rules, the innermost function can access variables\nfrom outer functions' scope as well.</p>",
          "weight": 0.0
        },
        {
          "id": 3575,
          "text": "",
          "html": "<p><code>part3</code></p>",
          "comments": "",
          "comments_html": "<p>Because of JavaScript's scope rules, the innermost function can access variables\nfrom outer functions' scope as well, as well as the global scope.</p>",
          "weight": 0.0
        },
        {
          "id": 9355,
          "text": "",
          "html": "<p><code>name</code>, <code>part3</code></p>",
          "comments": "",
          "comments_html": "<p>Because of JavaScript's scope rules, the innermost function can access variables\nfrom outer functions' scope as well.</p>",
          "weight": 0.0
        },
        {
          "id": 5295,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366167,
      "quiz_id": 53433,
      "quiz_group_id": null,
      "assessment_question_id": 632015,
      "position": null,
      "question_name": "Functions: Syntax",
      "question_type": "short_answer_question",
      "question_text": "<p>What will the following function return?</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">function</span> <span class=\"nx\">mySubtract</span><span class=\"p\">(</span><span class=\"nx\">number</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">number</span> <span class=\"o\">&gt;</span> <span class=\"mi\">11</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"nx\">number</span> <span class=\"o\">-</span> <span class=\"mi\">11</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"mi\">11</span> <span class=\"o\">-</span> <span class=\"nx\">number</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">mySubtract</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">);</span>\n</code></pre></div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "Be sure to study the source/s for this question. You'll get it next time.",
      "neutral_comments": "Source/s:Review: Functions",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7550/pages/review-functions?module_item_id=627473\">Review: Functions</a></li></ul><p></p>",
      "answers": [
        {
          "id": "3543",
          "text": "89",
          "comments": "",
          "comments_html": "",
          "weight": 100
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366168,
      "quiz_id": 53433,
      "quiz_group_id": null,
      "assessment_question_id": 632024,
      "position": null,
      "question_name": "Functions: Syntax",
      "question_type": "true_false_question",
      "question_text": "<p>You cannot call a function before you have declared it.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: Continued",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7550/assignments/263243?module_item_id=627475\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "comments": "",
          "comments_html": "<p>Because of hoisting, it's possible to call a function before it was defined, as\nlong as it was defined using a function declaration:</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"nx\">razzle</span><span class=\"p\">();</span> <span class=\"c1\">//=&gt; \"You've been razzled!\"</span>\n<span class=\"kd\">function</span> <span class=\"nx\">razzle</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">You've been razzled!</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
          "text": "True",
          "weight": 0,
          "id": 8434
        },
        {
          "comments": "",
          "comments_html": "<p>Because of hoisting, it's possible to call a function before it was defined, as\nlong as it was defined using a function declaration:</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"nx\">razzle</span><span class=\"p\">();</span> <span class=\"c1\">//=&gt; \"You've been razzled!\"</span>\n<span class=\"kd\">function</span> <span class=\"nx\">razzle</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">You've been razzled!</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
          "text": "False",
          "weight": 100,
          "id": 7235
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366169,
      "quiz_id": 53433,
      "quiz_group_id": null,
      "assessment_question_id": 632014,
      "position": null,
      "question_name": "Functions: Syntax",
      "question_type": "multiple_answers_question",
      "question_text": "<p>Select all the ways you can write a function.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Arrow FunctionsFunctions: Continued",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7550/assignments/263227?module_item_id=627477\">Arrow Functions</a></li><li><a href=\"/courses/7550/assignments/263243?module_item_id=627475\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "id": "3769",
          "text": "",
          "comments": "",
          "comments_html": "",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">function</span> <span class=\"nx\">foo</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"dl\">\"</span><span class=\"s2\">bar</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>"
        },
        {
          "id": "4537",
          "text": "",
          "comments": "",
          "comments_html": "",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">let</span> <span class=\"nx\">foo</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"dl\">\"</span><span class=\"s2\">bar</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n</code></pre></div>"
        },
        {
          "id": "5358",
          "text": "",
          "comments": "",
          "comments_html": "",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">foo</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"dl\">\"</span><span class=\"s2\">bar</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n</code></pre></div>"
        },
        {
          "id": "2750",
          "text": "",
          "comments": "",
          "comments_html": "",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">foo</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"dl\">\"</span><span class=\"s2\">bar</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n</code></pre></div>"
        },
        {
          "id": "7386",
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the <strong>Arrow Function</strong> source for this question. You'll get it\nnext time.</p>",
          "weight": 0.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">foo</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span> <span class=\"k\">return</span> <span class=\"dl\">'</span><span class=\"s1\">bar</span><span class=\"dl\">'</span><span class=\"p\">;</span> <span class=\"p\">}</span>\n</code></pre></div>"
        },
        {
          "id": 6952,
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p>I don't know.</p>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366170,
      "quiz_id": 53433,
      "quiz_group_id": null,
      "assessment_question_id": 632023,
      "position": null,
      "question_name": "Functions: Syntax",
      "question_type": "true_false_question",
      "question_text": "<p>You should never pass a function as an argument.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: ContinuedCallback Functions",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7550/assignments/263243?module_item_id=627475\">Functions: Continued</a></li><li><a href=\"/courses/7550/pages/callback-functions?module_item_id=627478\">Callback Functions</a></li></ul><p></p>",
      "answers": [
        {
          "comments": "",
          "comments_html": "<p>Being able to pass a function as a <strong>callback</strong> to another function is an\nimportant feature of JavaScript.</p>",
          "text": "True",
          "weight": 0,
          "id": 6339
        },
        {
          "comments": "",
          "comments_html": "<p>Correct! Being able to pass a function as a <strong>callback</strong> to another function is\nan important feature of JavaScript.</p>",
          "text": "False",
          "weight": 100,
          "id": 6696
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}