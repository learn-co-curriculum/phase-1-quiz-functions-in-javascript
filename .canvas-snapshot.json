{
  "quiz": {
    "id": 42562,
    "title": "Functions in JavaScript Quiz",
    "html_url": "https://learning.flatironschool.com/courses/6638/quizzes/42562",
    "mobile_url": "https://learning.flatironschool.com/courses/6638/quizzes/42562?force_user=1&persist_headless=1",
    "description": "<div id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-1-quiz-functions-in-javascript\"></div>\n<header class=\"fis-header\">\n  <a class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-1-quiz-functions-in-javascript/issues/new\" target=\"_blank\"><img id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"></a>\n</header>\n\n<p>It's time to check your knowledge! Use this quiz to create a custom study guide.\nNote any answers that were marked incorrect, so you can study the relevant\nmaterial and try this quiz again.</p>\n\n<p>If you don't know the answer to a question, please do not guess. Instead, select\n\"I don't know\". It's OK not to know everything and to admit when we're unsure.</p>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 12,
    "points_possible": 12.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_42562"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": "",
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/6638/quizzes/42562/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/6638/quizzes/42562/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/6638/quizzes/42562/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/6638/quizzes/42562/submission_versions",
    "assignment_id": 223854,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 19770,
    "show_correct_answers_last_attempt": true,
    "version_number": 3,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": "g2ce586a498ba0810beae538b1beac10f",
    "in_paced_course": false,
    "question_types": [

    ]
  },
  "questions": [
    {
      "id": 289897,
      "quiz_id": 42562,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 1,
      "question_name": "Functions: Basics",
      "question_type": "matching_question",
      "question_text": "Match each of the concepts with the description or code block that best suits\nthem.",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: Continued",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/assignments/223889?module_item_id=523447\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "text": "Hoisting",
          "id": 3126,
          "match_id": 8659,
          "left": "Hoisting",
          "right": "In JavaScript, the ability to place a function call before the function definition is due to ___."
        },
        {
          "text": "Anonymous Function",
          "id": 438,
          "match_id": 2811,
          "left": "Anonymous Function",
          "right": "const fn = function() {   console.log(\"Yet more razzling\"); }"
        },
        {
          "text": "Immediately Invoked Function Expression",
          "id": 8813,
          "match_id": 8650,
          "left": "Immediately Invoked Function Expression",
          "right": "(function(baseNumber){ return baseNumber + 3; })(2)"
        },
        {
          "text": "Function-Level Scope",
          "id": 7346,
          "match_id": 2347,
          "left": "Function-Level Scope",
          "right": "___ means that the variables belonging to a function can only be accessed from inside the function."
        },
        {
          "text": "Closure",
          "id": 8993,
          "match_id": 645,
          "left": "Closure",
          "right": "When a function \"encloses\" the function-level scope of its parent, we call it a ___."
        },
        {
          "text": "Function Declaration",
          "id": 6105,
          "match_id": 1907,
          "left": "Function Declaration",
          "right": "function razzle() {   console.log(\"You've been razzled!\"); }"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": [
        {
          "match_id": 8659,
          "text": "In JavaScript, the ability to place a function call before the function definition is due to ___."
        },
        {
          "match_id": 2811,
          "text": "const fn = function() {   console.log(\"Yet more razzling\"); }"
        },
        {
          "match_id": 8650,
          "text": "(function(baseNumber){ return baseNumber + 3; })(2)"
        },
        {
          "match_id": 2347,
          "text": "___ means that the variables belonging to a function can only be accessed from inside the function."
        },
        {
          "match_id": 645,
          "text": "When a function \"encloses\" the function-level scope of its parent, we call it a ___."
        },
        {
          "match_id": 1907,
          "text": "function razzle() {   console.log(\"You've been razzled!\"); }"
        }
      ],
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289898,
      "quiz_id": 42562,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 2,
      "question_name": "Functions: Callbacks",
      "question_type": "short_answer_question",
      "question_text": "<p>A ____ function is a function passed into another function as an argument,\nwhich is then invoked inside the outer function. For example:</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">function</span> <span class=\"nx\">greet</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">,</span> <span class=\"nx\">fn</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nx\">fn</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">greet</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Ada Lovelace</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"dl\">\"</span><span class=\"s2\">Hello there, </span><span class=\"dl\">\"</span> <span class=\"o\">+</span> <span class=\"nx\">name</span><span class=\"p\">;</span>\n<span class=\"p\">});</span>\n</code></pre></div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "Be sure to study the source/s for this question. You'll get it next time.",
      "neutral_comments": "Source/s:Callback Functions",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/pages/callback-functions?module_item_id=523450\">Callback Functions</a></li></ul><p></p>",
      "answers": [
        {
          "text": "Callback",
          "weight": 100,
          "comments": "Correct!",
          "id": 956
        },
        {
          "text": "call back",
          "weight": 100,
          "comments": "Correct!",
          "id": 5305
        },
        {
          "text": "Call Back",
          "weight": 100,
          "comments": "Correct!",
          "id": 5964
        },
        {
          "text": "Call back",
          "weight": 100,
          "comments": "Correct!",
          "id": 4372
        },
        {
          "text": "callback",
          "weight": 100,
          "comments": "Correct!",
          "id": 9585
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289899,
      "quiz_id": 42562,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 3,
      "question_name": "Functions: Closure",
      "question_type": "short_answer_question",
      "question_text": "<p>A ___ gives you access to an outer functionâ€™s scope from an inner function.</p>\n\n<p>For example:</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">function</span> <span class=\"nx\">outerFn</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">countCalls</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"kd\">function</span> <span class=\"nx\">innerFn</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">countCalls</span><span class=\"o\">++</span><span class=\"p\">;</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">countCalls</span><span class=\"p\">);</span>\n  <span class=\"p\">};</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">innerFn</span> <span class=\"o\">=</span> <span class=\"nx\">outerFn</span><span class=\"p\">();</span>\n<span class=\"nx\">innerFn</span><span class=\"p\">();</span>\n<span class=\"c1\">// =&gt; 1</span>\n<span class=\"nx\">innerFn</span><span class=\"p\">();</span>\n<span class=\"c1\">// =&gt; 2</span>\n</code></pre></div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "Be sure to study the source/s for this question. You'll get it next time.",
      "neutral_comments": "Source/s:Functions: Continued",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/assignments/223889?module_item_id=523447\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "text": "closure",
          "weight": 100,
          "comments": "Nice!",
          "id": 875
        },
        {
          "text": "Closure",
          "weight": 100,
          "comments": "Nice!",
          "id": 2976
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289900,
      "quiz_id": 42562,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 4,
      "question_name": "Functions: First Class",
      "question_type": "true_false_question",
      "question_text": "A function is a first class object.",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: ContinuedFirst-Class Functions",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/assignments/223889?module_item_id=523447\">Functions: Continued</a></li><li><a href=\"/courses/6638/assignments/223882?module_item_id=523451\">First-Class Functions</a></li></ul><p></p>",
      "answers": [
        {
          "weight": 100,
          "migration_id": "RESPONSE_2373",
          "id": 2373,
          "text": "True",
          "comments": "Correct!"
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_685",
          "id": 685,
          "text": "False",
          "comments": "Be sure to study the source/s for this question. You'll get it next time."
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289901,
      "quiz_id": 42562,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 5,
      "question_name": "Functions: Hoisting",
      "question_type": "true_false_question",
      "question_text": "<p>For hoisting to work, the function must be defined as a function declaration.</p>\n\n<p>For example:</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"c1\">// Hoisting</span>\n<span class=\"nx\">willItHoist</span><span class=\"p\">();</span>\n\n<span class=\"c1\">// Function declaration</span>\n<span class=\"kd\">function</span> <span class=\"nx\">willItHoist</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">You tell me!</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: Continued",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/assignments/223889?module_item_id=523447\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "weight": 100,
          "migration_id": "RESPONSE_9174",
          "id": 9174,
          "text": "True",
          "comments": "Correct!"
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_9643",
          "id": 9643,
          "text": "False",
          "comments": "Be sure to study the source/s for this question. You'll get it next time."
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289902,
      "quiz_id": 42562,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 6,
      "question_name": "Functions: Hoisting",
      "question_type": "true_false_question",
      "question_text": "<p>Function expressions are hoisted.</p>\n\n<p>For example:</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"c1\">// Hoisting</span>\n<span class=\"nx\">willItHoist</span><span class=\"p\">();</span>\n\n<span class=\"c1\">// Function expression</span>\n<span class=\"kd\">const</span> <span class=\"nx\">willItHoist</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">You tell me!</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">};</span>\n</code></pre></div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: Continued",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/assignments/223889?module_item_id=523447\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "weight": 0,
          "migration_id": "RESPONSE_6914",
          "id": 6914,
          "text": "True",
          "comments": "Be sure to study the source/s for this question. You'll get it next time."
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_2833",
          "id": 2833,
          "text": "False",
          "comments": "Correct!"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289903,
      "quiz_id": 42562,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 7,
      "question_name": "Functions: Scope",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Given the following code:</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">function</span> <span class=\"nx\">outerFn</span><span class=\"p\">(</span><span class=\"nx\">outerParam</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">outerVar</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"kd\">function</span> <span class=\"nx\">innerFn</span><span class=\"p\">(</span><span class=\"nx\">innerParam</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">innerVar</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n    <span class=\"c1\">// etc</span>\n  <span class=\"p\">};</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>The <code>innerFn</code> function has access to...</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: Continued",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/assignments/223889?module_item_id=523447\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "weight": 100,
          "migration_id": "RESPONSE_2234",
          "id": 2234,
          "text": "All of the outer function's parameters as well as variables defined in the outer function.",
          "html": "All of the outer function's parameters as well as variables defined in the outer\nfunction."
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_9474",
          "id": 9474,
          "text": "Only the parameters passed into the inner function, and the variables declared within it.",
          "html": "Only the parameters passed into the inner function, and the variables declared\nwithin it.",
          "comments": "Because of JavaScript's scope rules, the inner function has access to the outer function's scope from an inner function.",
          "comments_html": "Because of JavaScript's scope rules, the inner function has access to the\nouter function's scope from an inner function."
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_2317",
          "id": 2317,
          "text": "I don't know.",
          "html": "I don't know.",
          "comments": "Be sure to study the source/s for this question. You'll get it next time."
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289904,
      "quiz_id": 42562,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 8,
      "question_name": "Functions: Scope",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Which variables does the function <code>inner2</code> have access to?</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">part1</span> <span class=\"o\">=</span> <span class=\"dl\">\"</span><span class=\"s2\">hello</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">demoChain</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">part2</span> <span class=\"o\">=</span> <span class=\"dl\">\"</span><span class=\"s2\">hi</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"kd\">function</span> <span class=\"nx\">inner1</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">part3</span> <span class=\"o\">=</span> <span class=\"dl\">\"</span><span class=\"s2\">there</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span> <span class=\"kd\">function</span> <span class=\"nx\">inner2</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"c1\">// what variables are accessible here?</span>\n    <span class=\"p\">};</span>\n  <span class=\"p\">};</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">demoChain</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Dr. Stephen Strange</span><span class=\"dl\">\"</span><span class=\"p\">)()();</span>\n</code></pre></div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: Continued",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/assignments/223889?module_item_id=523447\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "weight": 100,
          "migration_id": "RESPONSE_7799",
          "id": 7799,
          "text": "part1, name, part2, part3",
          "html": "<code>part1</code>, <code>name</code>, <code>part2</code>, <code>part3</code>",
          "comments": "Correct! Because of JavaScript's scope rules, the innermost function can access variables from outer functions' scope as well.",
          "comments_html": "Correct! Because of JavaScript's scope rules, the innermost function can\naccess variables from outer functions' scope as well."
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_4545",
          "id": 4545,
          "text": "name, part1, part3",
          "html": "<code>name</code>, <code>part1</code>, <code>part3</code>",
          "comments": "Because of JavaScript's scope rules, the innermost function can access variables from outer functions' scope as well.",
          "comments_html": "Because of JavaScript's scope rules, the innermost function can access variables\nfrom outer functions' scope as well."
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_1905",
          "id": 1905,
          "text": "part3",
          "html": "<code>part3</code>",
          "comments": "Because of JavaScript's scope rules, the innermost function can access variables from outer functions' scope as well, as well as the global scope.",
          "comments_html": "Because of JavaScript's scope rules, the innermost function can access variables\nfrom outer functions' scope as well, as well as the global scope."
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_6170",
          "id": 6170,
          "text": "name, part3",
          "html": "<code>name</code>, <code>part3</code>",
          "comments": "Because of JavaScript's scope rules, the innermost function can access variables from outer functions' scope as well.",
          "comments_html": "Because of JavaScript's scope rules, the innermost function can access variables\nfrom outer functions' scope as well."
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_1253",
          "id": 1253,
          "text": "I don't know.",
          "html": "I don't know.",
          "comments": "Be sure to study the source/s for this question. You'll get it next time."
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289905,
      "quiz_id": 42562,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 9,
      "question_name": "Functions: Syntax",
      "question_type": "short_answer_question",
      "question_text": "<p>What will the following function return?</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">function</span> <span class=\"nx\">mySubtract</span><span class=\"p\">(</span><span class=\"nx\">number</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">number</span> <span class=\"o\">&gt;</span> <span class=\"mi\">11</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"nx\">number</span> <span class=\"o\">-</span> <span class=\"mi\">11</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"mi\">11</span> <span class=\"o\">-</span> <span class=\"nx\">number</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">mySubtract</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">);</span>\n</code></pre></div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "Be sure to study the source/s for this question. You'll get it next time.",
      "neutral_comments": "Source/s:Review: Functions",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/pages/review-functions?module_item_id=523445\">Review: Functions</a></li></ul><p></p>",
      "answers": [
        {
          "text": "89",
          "weight": 100,
          "comments": "",
          "id": 3543
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289906,
      "quiz_id": 42562,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 10,
      "question_name": "Functions: Syntax",
      "question_type": "true_false_question",
      "question_text": "You cannot call a function before you have declared it.",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: Continued",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/assignments/223889?module_item_id=523447\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "weight": 0,
          "migration_id": "RESPONSE_8434",
          "id": 8434,
          "text": "True",
          "comments": "Because of hoisting, it's possible to call a function before it was defined, as long as it was defined using a function declaration: razzle(); //= \"You've been razzled!\" function razzle() { console.log(\"You've been razzled!\"); }",
          "comments_html": "<p>Because of hoisting, it's possible to call a function before it was defined, as\nlong as it was defined using a function declaration:</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"nx\">razzle</span><span class=\"p\">();</span> <span class=\"c1\">//=&gt; \"You've been razzled!\"</span>\n<span class=\"kd\">function</span> <span class=\"nx\">razzle</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">You've been razzled!</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>"
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_7235",
          "id": 7235,
          "text": "False",
          "comments": "Because of hoisting, it's possible to call a function before it was defined, as long as it was defined using a function declaration: razzle(); //= \"You've been razzled!\" function razzle() { console.log(\"You've been razzled!\"); }",
          "comments_html": "<p>Because of hoisting, it's possible to call a function before it was defined, as\nlong as it was defined using a function declaration:</p>\n<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"nx\">razzle</span><span class=\"p\">();</span> <span class=\"c1\">//=&gt; \"You've been razzled!\"</span>\n<span class=\"kd\">function</span> <span class=\"nx\">razzle</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">You've been razzled!</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289907,
      "quiz_id": 42562,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 11,
      "question_name": "Functions: Syntax",
      "question_type": "multiple_answers_question",
      "question_text": "Select all the ways you can write a function.",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Arrow FunctionsFunctions: Continued",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/assignments/223868?module_item_id=523449\">Arrow Functions</a></li><li><a href=\"/courses/6638/assignments/223889?module_item_id=523447\">Functions: Continued</a></li></ul><p></p>",
      "answers": [
        {
          "weight": 100,
          "migration_id": "RESPONSE_3769",
          "id": 3769,
          "text": "function foo() { return \"bar\"; }",
          "html": "<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">function</span> <span class=\"nx\">foo</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"dl\">\"</span><span class=\"s2\">bar</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>"
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_4537",
          "id": 4537,
          "text": "let foo = function () { return \"bar\"; };",
          "html": "<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">let</span> <span class=\"nx\">foo</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"dl\">\"</span><span class=\"s2\">bar</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n</code></pre></div>"
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_5358",
          "id": 5358,
          "text": "const foo = () = \"bar\";",
          "html": "<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">foo</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"dl\">\"</span><span class=\"s2\">bar</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n</code></pre></div>"
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_2750",
          "id": 2750,
          "text": "const foo = () = { return \"bar\"; };",
          "html": "<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">foo</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"dl\">\"</span><span class=\"s2\">bar</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n</code></pre></div>"
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_7386",
          "id": 7386,
          "text": "const foo = { return 'bar'; }",
          "html": "<div class=\"highlight\"><pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">foo</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span> <span class=\"k\">return</span> <span class=\"dl\">'</span><span class=\"s1\">bar</span><span class=\"dl\">'</span><span class=\"p\">;</span> <span class=\"p\">}</span>\n</code></pre></div>",
          "comments": "Be sure to study the Arrow Function source for this question. You'll get it next time.",
          "comments_html": "Be sure to study the <strong>Arrow Function</strong> source for this question. You'll get\nit next time."
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_2972",
          "id": 2972,
          "text": "I don't know.",
          "html": "I don't know.",
          "comments": "Be sure to study the source/s for this question. You'll get it next time."
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 289908,
      "quiz_id": 42562,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 12,
      "question_name": "Functions: Syntax",
      "question_type": "true_false_question",
      "question_text": "You should never pass a function as an argument.",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Functions: ContinuedCallback Functions",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/6638/assignments/223889?module_item_id=523447\">Functions: Continued</a></li><li><a href=\"/courses/6638/pages/callback-functions?module_item_id=523450\">Callback Functions</a></li></ul><p></p>",
      "answers": [
        {
          "weight": 0,
          "migration_id": "RESPONSE_6339",
          "id": 6339,
          "text": "True",
          "comments": "Being able to pass a function as a callback to another function is an important feature of JavaScript.",
          "comments_html": "Being able to pass a function as a <strong>callback</strong> to another function is\nan important feature of JavaScript."
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_6696",
          "id": 6696,
          "text": "False",
          "comments": "Correct! Being able to pass a function as a callback to another function is an important feature of JavaScript.",
          "comments_html": "Correct! Being able to pass a function as a <strong>callback</strong> to another function\nis an important feature of JavaScript."
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}